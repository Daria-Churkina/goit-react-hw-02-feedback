{"version":3,"sources":["Components/Statistics.jsx","Components/FeedbackOptions.jsx","Components/Notification.jsx","Components/Section.jsx","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","src","alt","FeedbackOptions","onLeaveFeedback","type","name","onClick","Notification","message","Section","title","children","App","state","event","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAmEeA,EAhEI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIC,UAAU,iBAAd,UACE,oBAAIA,UAAU,iBAAd,SACE,oBAAGA,UAAU,gBAAb,UACE,qBACEC,IAAI,iEACJC,IAAI,gHACJF,UAAU,SAJd,YAMa,sBAAMA,UAAU,iBAAhB,SAAkCL,SAGjD,oBAAIK,UAAU,iBAAd,SACE,oBAAGA,UAAU,gBAAb,UACE,qBACEC,IAAI,iEACJC,IAAI,gHACJF,UAAU,SAJd,eAMgB,sBAAMA,UAAU,iBAAhB,SAAkCJ,SAGpD,oBAAII,UAAU,iBAAd,SACE,oBAAGA,UAAU,gBAAb,UACE,qBACEC,IAAI,iEACJC,IAAI,gHACJF,UAAU,SAJd,WAMY,sBAAMA,UAAU,iBAAhB,SAAkCH,SAGhD,oBAAIG,UAAU,iBAAd,SACE,oBAAGA,UAAU,gBAAb,UACE,qBACEC,IAAI,iEACJC,IAAI,gHACJF,UAAU,SAJd,aAMc,sBAAMA,UAAU,iBAAhB,SAAkCF,WAGlD,oBAAIE,UAAU,iBAAd,SACE,oBAAGA,UAAU,gBAAb,UACE,qBACEC,IAAI,iEACJC,IAAI,gHACJF,UAAU,SAJd,yBAOE,uBAAMA,UAAU,iBAAhB,UAAkCD,IAAlC,gBChCOI,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,sBAAKJ,UAAU,WAAf,UACE,wBAAQK,KAAK,SAASC,KAAK,OAAOC,QAASH,EAA3C,kBAGA,wBAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,EAA9C,qBAGA,wBAAQC,KAAK,SAASC,KAAK,MAAMC,QAASH,EAA1C,qBCEWI,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,4BAAIA,OCUOC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,MC0CUC,G,kNAxCbC,MAAQ,CAAEnB,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCO,gBAAkB,SAAAW,GAChB,IAAMT,EAAOS,EAAMC,OAAOV,KAC1B,EAAKW,UAAS,SAAAH,GAAK,sBAChBR,EAAOQ,EAAMR,GAAQ,O,EAI1BY,mBAAqB,WACnB,OAAO,EAAKJ,MAAMnB,KAAO,EAAKmB,MAAMlB,QAAU,EAAKkB,MAAMjB,K,EAG3DsB,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKP,MAAMnB,KAAc,EAAKuB,uB,uDAIjD,OACE,sBAAKlB,UAAU,eAAf,UACE,cAAC,EAAD,CAASW,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBP,gBAAiBkB,KAAKlB,oBAEzC,cAAC,EAAD,CAASO,MAAM,aAAf,SACGW,KAAKJ,qBACJ,cAAC,EAAD,CACEvB,KAAM2B,KAAKR,MAAMnB,KACjBC,QAAS0B,KAAKR,MAAMlB,QACpBC,IAAKyB,KAAKR,MAAMjB,IAChBC,MAAOwB,KAAKJ,mBACZnB,mBAAoBuB,KAAKH,kCAG3B,cAAC,EAAD,CAAcV,QAAQ,+B,GAlChBc,cCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.675439d0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className=\"statisticsList\">\n    <li className=\"statisticsItem\">\n      <p className=\"statisticName\">\n        <img\n          src=\"https://www.flaticon.com/svg/static/icons/svg/1933/1933691.svg\"\n          alt=\"Аватар пользователя\"\n          className=\"icon\"\n        />\n        Good:&nbsp;<span className=\"statisticValue\">{good}</span>\n      </p>\n    </li>\n    <li className=\"statisticsItem\">\n      <p className=\"statisticName\">\n        <img\n          src=\"https://www.flaticon.com/svg/static/icons/svg/1933/1933511.svg\"\n          alt=\"Аватар пользователя\"\n          className=\"icon\"\n        />\n        Neutral:&nbsp;<span className=\"statisticValue\">{neutral}</span>\n      </p>\n    </li>\n    <li className=\"statisticsItem\">\n      <p className=\"statisticName\">\n        <img\n          src=\"https://www.flaticon.com/svg/static/icons/svg/1933/1933823.svg\"\n          alt=\"Аватар пользователя\"\n          className=\"icon\"\n        />\n        Bad:&nbsp;<span className=\"statisticValue\">{bad}</span>\n      </p>\n    </li>\n    <li className=\"statisticsItem\">\n      <p className=\"statisticName\">\n        <img\n          src=\"https://www.flaticon.com/svg/static/icons/svg/1006/1006394.svg\"\n          alt=\"Аватар пользователя\"\n          className=\"icon\"\n        />\n        Total:&nbsp;<span className=\"statisticValue\">{total()}</span>\n      </p>\n    </li>\n    <li className=\"statisticsItem\">\n      <p className=\"statisticName\">\n        <img\n          src=\"https://www.flaticon.com/svg/static/icons/svg/2694/2694943.svg\"\n          alt=\"Аватар пользователя\"\n          className=\"icon\"\n        />\n        Positive feedback:&nbsp;\n        <span className=\"statisticValue\">{positivePercentage()}%</span>\n      </p>\n    </li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.func,\n  positivePercentage: PropTypes.func,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\n  <div className=\"controls\">\n    <button type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\n      Good\n    </button>\n    <button type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>\n      Neutral\n    </button>\n    <button type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\n      Bad\n    </button>\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => (\n  <>\n    <p>{message}</p>\n  </>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.object,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport Statistics from './Components/Statistics';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Notification from './Components/Notification';\nimport Section from './Components/Section';\nimport './Components/styles.css';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  onLeaveFeedback = event => {\n    const name = event.target.name;\n    this.setState(state => ({\n      [name]: state[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    return (\n      <div className=\"main-section\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}